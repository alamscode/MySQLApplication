
Parameters:

  # KeyName:
  #   Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
  #   Type: AWS::EC2::KeyPair::KeyName
  #   ConstraintDescription: must be the name of an existing EC2 KeyPair.
  #   Default: alam-keypair-N.V
  
  InstanceType:
    Description: Webserver EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge

  # MasterUsername:
  #   Description: Database administration name. First character must be a letter and
  #     can not be 'root'.
  #   Type: String
  #   Default: rdsroot
  
  
  # BackupRetentionPeriod:
  #   Description: Enter Backup Retention Period in Days.
  #   Type: Number
  #   Default: 7
  
  # MultiAvailabilityZone:
  #   Description: Enable Multi Availability Zones?
  #   Type: String
  #   Default: false
  #   AllowedValues:
  #     - true
  #     - false

  # AllocatedStorage:
  #   Default: '5'
  #   Description: The size of the database (Gb)
  #   Type: Number
  #   MinValue: '5'
  #   MaxValue: '6144'
  #   ConstraintDescription: Must be between 5-6144

  # SnapshotOnDelete:
  #   Description: Create a Snapshot on Delete?
  #   Type: String
  #   Default: false
  #   AllowedValues:
  #     - true
  #     - false
  
  # DbInstanceType:
  #   Description: Select Instance Type.
  #   Type: String
  #   Default: db.t2.small
  #   AllowedValues:
  #     - db.t1.micro
  #     - db.t2.micro
  #     - db.t2.small
  #     - db.t2.medium
  #     - db.t2.large
  #     - db.m1.small
  #     - db.m1.medium
  #     - db.m1.large
  #     - db.m1.xlarge
  #     - db.m3.medium
  #     - db.m3.large
  #     - db.m3.xlarge
  #     - db.m3.2xlarge
  #     - db.m4.large
  #     - db.m4.xlarge
  #     - db.m4.2xlarge
  #     - db.m4.4xlarge
  #     - db.m4.10xlarge
  #     - db.r3.large
  #     - db.r3.xlarge
  #     - db.r3.2xlarge
  #     - db.r3.4xlarge
  #     - db.r3.8xlarge
  #   ConstraintDescription: Must be a valid EC2 instance type


# Conditions:
#   ConfigureSnapshotOnDelete:
#     Fn::Equals:
#     - Ref: SnapshotOnDelete
#     - 'true'


Mappings:
  Settings:
    MySQL:
      Engine: MySQL
      Version: '5.7'

  RegionMap: 
    us-east-1: 
      "HVM64": "ami-0756fbca465a59a30"
    us-east-2:
      "HVM64": "ami-04768381bf606e2b3"
    us-west-1: 
      "HVM64": "ami-063dd30adbb186909"
    eu-west-2: 
      "HVM64": "ami-07a0c6e669965bb7c"
    ap-south-1:
      "HVM64": "ami-0eacc5b7915ba9921"
    ap-northeast-2:
      "HVM64": "ami-082b5ca9ff663f3b8"
    ap-southeast-1: 
      "HVM64": "ami-03097abf0db1cdff2"
    ap-southeast-2:
      "HVM64": "ami-05067171f4230ac41"
    ap-northeast-1: 
      "HVM64": "ami-0ccdbc8c1cb7957be"
    ca-central-1:
      "HVM64": "ami-07ab3281411d31d04"
    eu-central-1:
      "HVM64": "ami-03a71cec707bfc3d7"
    eu-west-1:
      "HVM64": "ami-03c242f4af81b2365"
    eu-west-2:
      "HVM64": "ami-05663d374a152d239"
    eu-west-3:
      "HVM64": "ami-0f962299dc4d90c81"
    eu-north-1:
      "HVM64": "ami-be4bc3c0"
    sa-east-1:
      "HVM64": "ami-0eb2a191bf5e40e10"


Resources:

  # Webserver:
  #   Type: AWS::EC2::Instance
  #   Metadata:
  #     Comment1: Configure the bootstrap helpers to install the Apache Web Server and
  #       PHP
  #     Comment2: Save website content to /var/www/html/index.php
  #     AWS::CloudFormation::Init:
  #       configSets:
  #         Install:
  #         - Install
  #       Install:
  #         packages:
  #           yum:
  #             php-mysql: []
  #             mysql-server: []
  #             httpd: []
  #             php: []
  #   Properties:
  #     InstanceType:
  #       !Ref InstanceType
  #     SecurityGroupIds: 
  #       - !ImportValue alamstack-InstanceSecurityGroup
  #     KeyName:
  #       !Ref KeyName
  #     ImageId: ami-0080e4c5bc078760e
  #     SubnetId: 
  #       Fn::ImportValue: alamstack-PublicSubnet1
  #     UserData:
  #       Fn::Base64: !Sub |
  #         #!/bin/bash
  #         set -ex
  #         sleep 3m
  #         yum install deltarpm -y
  #         yum update -y
  #         yum upgrade -y
  #         yum install -y aws-cfn-bootstrap
  #         /opt/aws/bin/cfn-init -v -s ${AWS::StackName} -r Webserver -c Install --region ${AWS::Region}
  #         service httpd start
  #         cd /var/www/
  #         rm -rf html
  #         wget https://s3.amazonaws.com/alamhtml/html.zip
  #         unzip html.zip
  #         rm -rf html.zip
  #         sed -i -e 's/localhost/${AppServer.PrivateIp}/g' /var/www/html/config.php
  #     Tags:
  #       - Key: Name
  #         Value: alamweb





  # WebServer2:
  #   Type: AWS::EC2::Instance
  #   Properties:
  #     InstanceType:
  #       !Ref InstanceType
  #     SecurityGroupIds:
  #     - !GetAtt "InstanceSecurityGroup.GroupId"
  #     KeyName:
  #       !Ref KeyName
  #     ImageId: ami-0080e4c5bc078760e
  #     SubnetId: !Ref PublicSubnet2


  AppServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        !Ref InstanceType
      SecurityGroupIds:
        - !ImportValue alamstack-ApplicationServerSecurityGroup
      # KeyName:
      #   !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", HVM64]
      SubnetId:
        Fn::ImportValue: alamstack-PrivateSubnet1
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          set -x
          sleep 2m
          yum install deltarpm -y
          yum update -y
          yum upgrade -y
          yum install mysql-server -y 
          yum install php -y
          yum install --enablerepo="epel" ufw -y
          yes | ufw enable 
          ufw allow mysql
          service mysqld start
          mysqladmin -u root password test
          mysqladmin -u root -ptest flush-privileges
          mysql -u root -ptest -e "CREATE USER 'alam'@'%' IDENTIFIED BY 'test';"
          mysql -u root -ptest -e "GRANT ALL PRIVILEGES ON * . * TO 'alam'@'%' IDENTIFIED BY 'test';"
          mysql -u root -ptest -e "FLUSH PRIVILEGES;"
          mysql -u root -ptest -e "CREATE DATABASE crud;"
          mysql -u root -ptest << EOF 
          use crud;
          CREATE TABLE users (id INT(11) UNSIGNED AUTO_INCREMENT PRIMARY KEY, 
          firstname VARCHAR(30) NOT NULL, 
          lastname VARCHAR(30) NOT NULL, 
          email VARCHAR(50) NOT NULL, 
          age INT(3), 
          location VARCHAR(50), 
          date TIMESTAMP);
          EOF
          service mysqld restart
      Tags:
        - Key: Name
          Value: ApplicationServer



  # DbInstance:
  #   Type: AWS::RDS::DBInstance
  #   DeletionPolicy: Snapshot
  #   DependsOn: 
  #     - DbSubnetGroup
  #     - RdsSecurityGroup
  #   Properties:
  #     AllocatedStorage: !Ref AllocatedStorage
  #     BackupRetentionPeriod: !Ref BackupRetentionPeriod
  #     DBInstanceClass: !Ref DbInstanceType
  #     DBSubnetGroupName: !Ref DbSubnetGroup
  #     Engine:
  #       Fn::FindInMap:
  #       - Settings
  #       - MySQL
  #       - Engine
  #     EngineVersion:
  #       Fn::FindInMap:
  #       - Settings
  #       - MySQL
  #       - Version
  #     MasterUsername: !Ref MasterUsername
  #     MasterUserPassword: !Ref MasterUserPassword
  #     Port: !Ref TcpPort
  #     StorageType: gp2
  #     VPCSecurityGroups: 
  #       - !Ref RdsSecurityGroup
  #     Tags:
  #       - Key: Name
  #         Value: DbInstance


Outputs:
  # Webserver:
  #   Value: !Ref Webserver
  #   Export:
  #     Name: !Sub "alamstack-Webserver"

  AppServer:
    Value: !Ref AppServer
    Export:
      Name: !Sub "alamstack-AppServer"

  # KeyName:
  #   Value: !Ref KeyName
  #   Export:
  #     Name: !Sub "alamstack-KeyName"

  AppServerPrivateIp:
    Description: My Private Instance's Private IP Referred.
    Value:  !GetAtt AppServer.PrivateIp
    Export:
      Name: alamstack-AppServerPrivateIp

  InstanceType:
    Value: !Ref InstanceType
    Export:
      Name: alamstack-InstanceType